import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.btk5h'
version = '1.2.7-EquipableMC-Patch'

repositories {
  mavenCentral()
  maven {
    name = "sonatype"
    url = "https://oss.sonatype.org/content/groups/public/"
  }

  // Paper
  maven { url "https://repo.papermc.io/repository/maven-public/" }

  // Skript
  maven {
    url "https://repo.skriptlang.org/releases"
  }
}

dependencies {
  compileOnly("io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT")
  compileOnly("com.github.SkriptLang:Skript:2.10.0")
  implementation group: 'org.eclipse.jdt', name: 'org.eclipse.jdt.annotation', version: '2.2.700'
}

def targetJavaVersion = 17
java {
  def javaVersion = JavaVersion.toVersion(targetJavaVersion)
  sourceCompatibility = javaVersion
  targetCompatibility = javaVersion
  if (JavaVersion.current() < javaVersion) {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
  }
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'

  if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
    options.release.set(targetJavaVersion)
  }
}

build {
  tasks.withType(JavaCompile).tap {
    configureEach {
      options.compilerArgs.add("-Xlint:unchecked")
      options.compilerArgs.add("-Xlint:deprecation")
    }
  }
}

processResources {
  def props = [version: version]
  inputs.properties props
  filteringCharset 'UTF-8'
  filter ReplaceTokens, tokens: ["version": project.version]
}
